<?php
/**
 * Created by PhpStorm.
 * User: monster
 * Date: 26/08/2015
 * Time: 10:57
 */

/**
 * Implements hook_action_info().
 */
function srp_vbo_action_info()
{
  return array(
    'srp_vbo_srp_change_status_action' => array(
      'type' => 'entity',
      'label' => t('SRP VBO Change Status Action'),
      'behavior' => array('changes_property'),
      'configurable' => FALSE,
      'vbo_configurable' => TRUE,
      'triggers' => array('any'),
    ),
    'srp_vbo_change_amount' => array(
      'type' => 'entity',
      'label' => t('SRP Change Amount'),
      'behavior' => array('changes_property'),
      'configurable' => FALSE,
      'vbo_configurable' => TRUE,
      'triggers' => array('any'),
    )
  );
}

function srp_vbo_srp_change_status_action(&$object, $context = array()) {
  $message = t('SRP name is %title. has been changed, %status', array(
    '%title' => $object->name,
    '%status' => $context['status'],
  ));
  drupal_set_message($message);
  switch($context['status']) {
    case 'enable':
      $object->status = 'enabled';
      break;
    case 'disable':
      $object->status = 'disabled';
      break;
  }
}

function srp_vbo_srp_change_status_action_form($settings, &$form_state) {
  $form = array();
  $form['status'] = array(
    '#type' => 'select',
    '#title' => t('Choose status'),
    '#options' => array(
      'enable' => t('Enable'),
      'disable' => t('Disable'),
    ),
    '#required' => TRUE,
  );
  return $form;
}

function srp_vbo_srp_change_status_action_submit($form, $form_state) {
  $return = array();
  $return['status'] = $form_state['values']['status'];
  return $return; //Note, return value here must be an array.
}

/**
 * Implements hook_views_data_alter().
 */
function srp_vbo_views_data_alter(&$data) {
  if ($data['subscription_rest_package']['table']['entity type'] == 'subscription_rest_package') {
    $data['subscription_rest_package']['views_bulk_operations'] = array(
      'title' => $data['subscription_rest_package']['table']['group'],
      'group' => t('Bulk operations'),
      'help' => t('Provide a checkbox to select the row for bulk operations.'),
      'real field' => 'id',
      'field' => array(
        'handler' => 'srp_vbo_handler_field_operations',
        'click sortable' => FALSE,
      ),
    );
  }
}

function srp_vbo_change_amount_form($settings, $form_state) {
  $form = array();
  $form['amount'] = array(
    '#type' => 'select',
    '#title' => 'Amount',
    '#description' => 'Select subscription rest package amount NUMBER',
    '#required' => TRUE,
    '#options' => drupal_map_assoc(array('10' => '010', '20' => '020', '30' => '030', '50' => '050', '100' => '100',
      '200' => '200', '500' => '500')),
    '#default_value' => '10',
  );

  return $form;
}

function srp_vbo_change_amount_submit($form, $form_state) {
  $request = array();
  $request['amount'] = $form_state['values']['amount'];

  return $request;
}

function srp_vbo_change_amount(&$object, $context = array()) {
  drupal_set_message(t('SRP name %name has been changed amount to %amount 000', array('%name' => $object->name, '%amount' => $context['amount'])));
  $object->amount = $context['amount'] . '000';
}

class srp_vbo_handler_field_operations extends views_bulk_operations_handler_field_operations {
  function get_entity_type() {
    $base_table = $this->view->base_table;

    if (!empty($this->options['relationship']) && $this->options['relationship'] != 'none') {
      $relationships = $this->view->display_handler->get_option('relationships');
      $options = $relationships[$this->options['relationship']];
      $data = views_fetch_data($options['table']);
      $base_table = $data[$options['field']]['relationship']['base'];
    }
    // The base table is now known, use it to determine the entity type.
    foreach (entity_get_info() as $entity_type => $info) {
      if (isset($info['base table']) && $info['base table'] == $base_table) {
        return $entity_type;
      }
      elseif (isset($info['revision table']) && $info['revision table'] == $base_table) {
        $this->revision = TRUE;
        return $entity_type;
      }
    }

    return 'subscription_rest_package';
  }
}


